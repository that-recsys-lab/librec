# recommendation algorithm
rec.recommender.class=net.librec.recommender.baseline.MostPopularRecommender
#rec.recommender.class=net.librec.recommender.cf.ItemKNNRecommender
#rec.recommender.class=net.librec.recommender.cf.UserKNNRecommender

dfs.data.dir=./myData
data.input.path=rating/rating_1kU_20100_binary.csv
#dfs.membership.dir=membership/membership.csv

dfs.log.dir=./log
dfs.result.dir=../result
data.log.out.path=./result/results.txt


# appender class
feature.appender.class=net.librec.data.convertor.appender.ItemFeatureAppender
#feature.appender.class=net.librec.data.convertor.appender.UserFeatureAppender

# path to item feature file
data.itemfeature.path=itemfeature/myitemfeatures.csv

# path to user feature file
#data.userfeature.path=userfeature/userfeature.csv
#data.userfeature.path=userfeature/500users_synthetic_data.csv

# select feature for appender
data.feature=Africa
#data.feature=female


data.column.format=UIR
data.model.splitter=ratio
data.splitter.trainset.ratio=0.8
data.splitter.ratio=rating

rec.random.seed=201905
rec.recommender.isranking=true
rec.recommender.ranking.topn=10


# todo: adding itemfeature, userfeature. options: user, item, item-feature, user-feature
rec.recommender.similarities=item

# todo: adding a couple of metrics so we know which similarity metrics uses what class
# it's like it's only taking the first one into account!
rec.similarity.class=cos
rec.similarity.shrinkage=10


rec.eval.enable=true
rec.eval.classes=net.librec.eval.ranking.CalibrationEvaluator
#rec.eval.classes=net.librec.eval.ranking.DiscountedProportionalCFairnessEvaluator
#rec.eval.classes=dpcf
# if we have both item,itemfeature and only rec.similarity.class=cos we assume cosine for all of them.

rec.neighbors.knn.number=3
rec.neighbors.corate.limit=15

rec.learnrate.bolddriver=false
rec.learnrate.decay=1.0

rec.iterator.learnrate=0.0002
rec.iterator.learnrate.maximum=0.001
rec.iterator.maximum=2

rec.user.regularization=0.00001
rec.item.regularization=0.00001
rec.bias.regularization=0.02

rec.factor.number=3
rec.factor.balance.controller.regularization=0.1