dfs.data.dir=./myData
dfs.result.dir=../result

#output
#data.log.out.path=./result/results.txt
dfs.log.dir=./log

data.input.path=rating/sampleRating.csv
data.column.format=UIR

data.splitter.ratio=rating
data.model.splitter=ratio
#data.model.splitter=kcv
#data.splitter.cv.number=5
data.splitter.trainset.ratio=0.8

# item feature appender class
feature.appender.class=net.librec.data.convertor.appender.UserFeatureAppender

# path to item feature file
data.userfeature.path=userfeature/sampleUserFeature.csv
# select the PROTECTED feature for feature appender
data.protected.feature=F


# the recommendation algorithm
rec.random.seed=201704
rec.recommender.class=net.librec.recommender.cf.ranking.UBLNSLIMRecommender

# evaluation the result or not
rec.eval.enable=true
rec.eval.classes=precision

rec.similarity.class=cos
rec.similarity.shrinkage=10

# if this algorithm is ranking: true or false
rec.recommender.isranking=true
rec.recommender.ranking.topn=10


# To calculate the item x item similarity
rec.recommender.similarities=user
rec.recommender.earlystop=true

rec.neighbors.knn.number=10
rec.iterator.maximum=10

# slim hyper-parameters
#0.01, 0.001, 25 for ml
rec.slim.regularization.l1=0.01
rec.slim.regularization.l2=0.0001

# Item balance controller, how much importance should we give to balanced neighborhoods
rec.bnslim.regularization.l3=17

# Setting similarities below this amount to zero and reducing the calculations
rec.bnslim.minsimilarity=0.5